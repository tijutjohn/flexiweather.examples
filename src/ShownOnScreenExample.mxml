<?xml version="1.0" encoding="utf-8"?>
<FlexiWeatherTemplate xmlns:fx="http://ns.adobe.com/mxml/2009"
					  xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
					  xmlns:widgets="com.iblsoft.flexiweather.widgets.*" xmlns="examples.*"
					  xmlns:editable="com.iblsoft.flexiweather.ogc.editable.*" xmlns:ogc="com.iblsoft.flexiweather.ogc.*">
	<fx:Script>
		<![CDATA[
			import com.iblsoft.flexiweather.ogc.editable.data.IconFeatureType;
		]]>
	</fx:Script>
	<fx:Declarations>
		
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<states>
		<s:State name="normal"/>
		<s:State name="editing"/>
	</states>
	<s:VGroup width="100%" height="100%">

		
		<s:BorderContainer backgroundColor="0xe0e0e0" borderColor="0xaaaaaa" width="100%"
						   minHeight="0">
			<s:HGroup id="hboxMenu" width="100%" verticalAlign="middle" paddingBottom="5"
					  paddingLeft="5" paddingRight="5" paddingTop="5">
				<s:Label text="Change projection"/>
				<s:ToggleButton label="LatLon CRS:84" selected="{m_iw.crs == 'CRS:84'}"
								click="m_iw.setCRS('CRS:84', false); m_iw.setExtentBBoxRaw(-180,-90,180,90);"/>
				<s:ToggleButton label="North Polar Stereo" selected="{m_iw.crs == 'ESRI:102018'}"
								click="m_iw.setCRS('ESRI:102018', false); m_iw.setExtentBBoxRaw(-10000000,-10000000,10000000,10000000);"/>
				<s:ToggleButton label="South Polar Stereo" selected="{m_iw.crs == 'ESRI:102021'}"
								click="m_iw.setCRS('ESRI:102021', false); m_iw.setExtentBBoxRaw(-10000000,-10000000,10000000,10000000);"/>
				<s:ToggleButton label="Google Maps" selected="{m_iw.crs == 'EPSG:900913'}"
								click="m_iw.setCRS('EPSG:900913', false); m_iw.setExtentBBoxRaw(-20037508.34,-20037508.34,20037508.34,20037508.34);"/>
			</s:HGroup>
		</s:BorderContainer>
		<s:BorderContainer backgroundColor="0xe0e0e0" borderColor="0xaaaaaa" width="100%"
						   minHeight="0">
			<s:HGroup width="100%" verticalAlign="middle" paddingBottom="5"
					  paddingLeft="5" paddingRight="5" paddingTop="5">
				<s:Label text="BBox: {bbox.toString()}  Shown On Screen: {shownOnScreen}"/>
				<!--<s:Button label="Check Shown on Screen"/>-->
			</s:HGroup>
		</s:BorderContainer>
		
		<s:Group  width="100%" height="100%">
			
			<widgets:InteractiveWidget id="m_iw" width="100%" height="100%" areaChanged="onAreaChanged(event)"
									   >
				<widgets:InteractiveLayerZoom id="m_ilz" zOrder="1"/>
				<widgets:InteractiveLayerPan id="m_ilp" zOrder="2"/>
				
				<ogc:InteractiveLayerWFSFeatureEditor id="wfsLayer" version="{new Version(1,1,0)}"
													  zOrder="1000"/>
				
			</widgets:InteractiveWidget>
			<mx:UIComponent id="canvas"  width="100%" height="100%"/>
		</s:Group>
		
	</s:VGroup>
	

	<fx:Script>
		<![CDATA[
			import com.iblsoft.flexiweather.events.InteractiveWidgetEvent;
			import com.iblsoft.flexiweather.ogc.BBox;
			import com.iblsoft.features.StarFeature;
			import com.iblsoft.flexiweather.events.InteractiveLayerEvent;
			import com.iblsoft.flexiweather.net.events.UniURLLoaderErrorEvent;
			import com.iblsoft.flexiweather.net.events.UniURLLoaderEvent;
			import com.iblsoft.flexiweather.net.loaders.AbstractURLLoader;
			import com.iblsoft.flexiweather.ogc.FeatureBase;
			import com.iblsoft.flexiweather.ogc.FeatureUpdateContext;
			import com.iblsoft.flexiweather.ogc.Version;
			import com.iblsoft.flexiweather.ogc.editable.IObjectWithBaseTimeAndValidity;
			import com.iblsoft.flexiweather.ogc.editable.InteractiveLayerWFSEditable;
			import com.iblsoft.flexiweather.ogc.editable.WFSFeatureEditable;
			import com.iblsoft.flexiweather.ogc.editable.WFSFeatureEditableMode;
			import com.iblsoft.flexiweather.ogc.editable.annotations.CloudAnnotation;
			import com.iblsoft.flexiweather.ogc.editable.annotations.IcingAreaAnnotation;
			import com.iblsoft.flexiweather.ogc.editable.annotations.StormAnnotation;
			import com.iblsoft.flexiweather.ogc.editable.annotations.ThunderstormAreaAnnotation;
			import com.iblsoft.flexiweather.ogc.editable.annotations.TurbulenceAreaAnnotation;
			import com.iblsoft.flexiweather.ogc.editable.data.FeatureType;
			import com.iblsoft.flexiweather.ogc.editable.data.MoveablePoint;
			import com.iblsoft.flexiweather.ogc.editable.data.front.FrontType;
			import com.iblsoft.flexiweather.ogc.editable.featureEditor.data.FeatureEditorProduct;
			import com.iblsoft.flexiweather.ogc.editable.featureEditor.events.WFSTransactionEvent;
			import com.iblsoft.flexiweather.ogc.editable.features.WFSFeatureEditableMacro;
			import com.iblsoft.flexiweather.ogc.editable.features.WFSFeatureEditablePressureCentre;
			import com.iblsoft.flexiweather.ogc.editable.features.WFSFeatureEditableStorm;
			import com.iblsoft.flexiweather.ogc.editable.features.curves.WFSFeatureEditableFront;
			import com.iblsoft.flexiweather.ogc.editable.features.curves.withAnnotation.WFSFeatureEditableCloud;
			import com.iblsoft.flexiweather.ogc.editable.features.curves.withAnnotation.WFSFeatureEditableIcingArea;
			import com.iblsoft.flexiweather.ogc.editable.features.curves.withAnnotation.WFSFeatureEditableThunderstormArea;
			import com.iblsoft.flexiweather.ogc.editable.features.curves.withAnnotation.WFSFeatureEditableTurbulenceArea;
			import com.iblsoft.flexiweather.ogc.events.MoveablePointEvent;
			import com.iblsoft.flexiweather.ogc.wfs.WFSFeatureBase;
			import com.iblsoft.flexiweather.proj.Coord;
			import com.iblsoft.flexiweather.proj.Projection;
			import com.iblsoft.flexiweather.utils.ISO8601Parser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			import mx.managers.PopUpManager;
			
			import examples.featureEditor.events.FeatureEditorEvent;
			import examples.featureEditor.popups.FeatureEditorProductSelectDialog;
			import examples.featureEditor.popups.ProgressPopup;
			private var currentFeatureType: String;
			private var currentFeatureSetting: Object;
			private var currentlyEditedFeature: WFSFeatureEditable;
			private var currentlySelectedPoint: MoveablePoint;
			
			[Bindable]
			public var product: FeatureEditorProduct;
			
			[Bindable]
			public var productName: String = "Please select product";
			
			protected var mb_serviceBusy: Boolean = false;
			
			[Bindable]
			public var transactionInProgress: Boolean;
			
			[Bindable]
			public var bbox: BBox;
			[Bindable]
			public var shownOnScreen: Boolean;
			
			override protected function onCreationComplete(event: FlexEvent): void
			{
				super.onCreationComplete(event);
				Projection.addCRSByProj4("ESRI:54004", "+title=World Mercator +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs");
				Projection.addCRSByProj4("ESRI:102018", "+title=North Pole Stereographic +proj=stere +lat_0=90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m");
				Projection.addCRSByProj4("ESRI:102021", "+title=South Pole Stereographic +proj=stere +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m");
				m_iw.setCRS('CRS:84', false);
				m_iw.setExtentBBoxRaw(-180, -90, 180, 90);
				addLayer('dem', 1);
				addLayer('foreground', 1);
				getAllServicesCapabilities();
				
				bbox = new BBox(10,10,15,15);
			}
			
			private function onAreaChanged(event: InteractiveWidgetEvent): void
			{
				if (bbox)
				{
					var gr: Graphics = canvas.graphics;
					gr.clear();
					gr.lineStyle(1,0xaa0000);
					
					
					var pLeftTop: Point = m_iw.coordToPoint(new Coord("CRS:84", bbox.xMin, bbox.yMin));
					var pRightBottom: Point = m_iw.coordToPoint(new Coord("CRS:84", bbox.xMax, bbox.yMax));
					
					gr.moveTo(pLeftTop.x, pLeftTop.y);
					gr.lineTo(pRightBottom.x, pLeftTop.y);
					gr.lineTo(pRightBottom.x, pRightBottom.y);
					gr.lineTo(pLeftTop.x, pRightBottom.y);
					gr.lineTo(pLeftTop.x, pLeftTop.y);
					
					shownOnScreen = m_iw.shownOnScreen(bbox);
				}
			}
			

		]]>
	</fx:Script>
</FlexiWeatherTemplate>