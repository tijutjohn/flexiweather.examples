<?xml version="1.0"?>
<!-- dragdrop\SimpleTreeSelf.mxml -->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="900" height="600"
			   xmlns:docStorage="com.iblsoft.ria.widgets.documentsStorage.*" xmlns:dragging="examples.dragging.*">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.DragEvent;
			import mx.rpc.xml.SimpleXMLDecoder;
			
			import spark.layouts.supportClasses.DropLocation;
			// Initialize the data provider for the Tree.
			private function initApp():void {
				
				var ac: ArrayCollection = new ArrayCollection();
				addItemToAC(ac, "Item", 10, "");
				createFolderInAC(ac, 3, "FolderItem",5, "Item4/");
				createSubFolderInAC(ac, 3, 0, "SubFolderItem",2, "Item4/FolderItem/");
				createSubFolderInAC(ac, 3, 1, "Test",7,"Item4/FolderItem/");
				createSubFolderInAC(ac, 3, 2, "Jojo",3,"Item4/FolderItem/");
				createFolderInAC(ac, 7, "SecondFolderItem",7,"Item8/");
				
				
				
				
//				var ac: ArrayCollection = convertXMLTOArrayCollection();
				firstList.dataProvider = ac;
				
				
//				firstList.dataProvider = treeDP;
			}
			
			private function createSubFolderInAC(ac: ArrayCollection, position: int, positionInFolder:int, name: String, len: int, parentPath: String): void
			{
				var item: Object = ac.getItemAt(position);
				if (item)
				{
					var subitem: Object = item.children.getItemAt(positionInFolder);
					if (subitem)
					{
						var children: ArrayCollection = new ArrayCollection();
						addItemToAC(children, name, len, parentPath);
						subitem.children = children;
					}
				}
			}
			private function createFolderInAC(ac: ArrayCollection, position: int, name: String, len: int, parentPath: String): void
			{
				var item: Object = ac.getItemAt(position);
				if (item)
				{
					var children: ArrayCollection = new ArrayCollection();
					addItemToAC(children, name, len, parentPath);
					item.children = children;
				}
			}
			private function addItemToAC(ac: ArrayCollection, name: String, len: int, parentPath: String): void
			{
				for (var i:int = 1; i <= len; i++)
					ac.addItem({type: name+i, label: name +" "+i, fullPath: parentPath+name+i});
			}
			
			private var _enterSelectedIndex: int
			private function onDragEnter(event : DragEvent ) : void
			{
				var format : String=event.dragSource.formats[ 0 ];
				var item : * = DragEvent( event ).dragSource.dataForFormat( format )[ 0 ];
				trace("onDragEnter" + firstList.selectedIndex);
				_enterSelectedIndex = firstList.selectedIndex;
			}
			private function onDragOver(event : DragEvent ) : void
			{
//				trace("onDragOver");
			}
			private function onDragDrop(event : DragEvent ) : void
			{
				trace("onDragDrop");
				var format : String=event.dragSource.formats[ 0 ];
				var item : * = DragEvent( event ).dragSource.dataForFormat( format )[ 0 ];
				var id: int = firstList.calculateDropIndex(event);
//				firstList.selectedIndex = id;
				trace("drop ["+id+"] item: " + item);
				if (id > _enterSelectedIndex)
					callLater(selectTreeItemByIndex, [id - 1]);
				else
					callLater(selectTreeItemByIndex, [id]);
			}
			
			private function selectTreeItemByIndex(id: int): void
			{
				firstList.selectedIndex = id;
				
				var item: Object = firstList.selectedItem;
				var parentItem: Object = firstList.getParentItem(item);
				
				firstList.updateDataPath(item);
			}
			private function onDragComplete(event : DragEvent ) : void
			{
//				trace("onDragComplete");
				var format : String=event.dragSource.formats[ 0 ];
				var item : * = DragEvent( event ).dragSource.dataForFormat( format )[ 0 ];
				var id: int = firstList.calculateDropIndex(event);
			}
			
			/* private function convertXMLTOArrayCollection(): ArrayCollection
			{
				var strXML:String = treeDP.toXMLString();
				strXML = "<root>" + strXML + "</root>";
				var xml:XML = new XML(strXML);
				var xmlDoc:XMLDocument = new XMLDocument(xml);
				
				var decoder:SimpleXMLDecoder = new SimpleXMLDecoder(false);
				
				var resultObj:Object = decoder.decodeXML(xmlDoc);
				var myData: ArrayCollection = new ArrayCollection();
				
				if(resultObj.root.hasOwnProperty("node"))
				{
					
					if(resultObj.root.node is ArrayCollection)
					{
						myData = resultObj.root.node;
					}
						
					else if(resultObj.root.node is Object)
					{
						myData.addItem(resultObj.root.node);
					}
				}
				
				return myData;
			} */
		]]>
	</fx:Script>
	
	<dragging:DocStorageTree id="firstList" 
			 width="600" height="600"
			 showRoot="false"
			 labelField="label"
			 dragEnabled="true" 
			 dropEnabled="true" 
			 dragMoveEnabled="true"
			 dragEnter="onDragEnter(event)"
			 dragOver="onDragOver(event)"
			 dragDrop="onDragDrop(event)"
			 dragComplete="onDragComplete(event)"
			 allowMultipleSelection="true"
			 creationComplete="initApp();"/>
</s:Application>