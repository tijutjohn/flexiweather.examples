<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:widgets="com.iblsoft.flexiweather.widgets.*"
		creationComplete="onCreationComplete(event)">
	<fx:Script>
		<![CDATA[
			import com.iblsoft.flexiweather.ogc.BBox;
			import com.iblsoft.flexiweather.ogc.InteractiveLayerQTTMS;
			import com.iblsoft.flexiweather.ogc.InteractiveLayerWMS;
			import com.iblsoft.flexiweather.ogc.OGCServiceConfigurationManager;
			import com.iblsoft.flexiweather.ogc.Version;
			import com.iblsoft.flexiweather.ogc.WMSLayerConfiguration;
			import com.iblsoft.flexiweather.ogc.WMSServiceConfiguration;
			import com.iblsoft.flexiweather.ogc.tiling.InteractiveLayerWMSWithQTT;
			import com.iblsoft.flexiweather.proj.Coord;
			import com.iblsoft.flexiweather.proj.Projection;
			import com.iblsoft.flexiweather.widgets.BackgroundJobManager;
			import com.iblsoft.flexiweather.widgets.InteractiveLayerPan;
			import com.iblsoft.flexiweather.widgets.InteractiveLayerZoom;
			
			import mx.controls.Alert;

			private var m_surfaceObsLayer: InteractiveLayerWMS;
			
			private function onCreationComplete(event: Event): void
			{
				BackgroundJobManager.getInstance().createDefaultPreloader();
				BackgroundJobManager.getInstance().setupIndicator(hboxMenu);

				m_iw.setCRS('EPSG:900913', false);
				m_iw.setExtentBBOXRaw(-20037508.34,-20037508.34,20037508.34,20037508.34);

				var scm: OGCServiceConfigurationManager =
            			OGCServiceConfigurationManager.getInstance();

    			var srv: WMSServiceConfiguration = scm.getService(
    					"https://ogcie.iblsoft.com/ria", new Version(1, 3, 0),
						WMSServiceConfiguration) as WMSServiceConfiguration;

    			var srv2: WMSServiceConfiguration = scm.getService(
    					"https://ogcie.iblsoft.com/obs?STATION_MODEL_ZOOM=0.9", new Version(1, 3, 0),
						WMSServiceConfiguration) as WMSServiceConfiguration;
				srv2.updatePeriod = 5*60*1000;
				
				var lc: WMSLayerConfiguration;
				var l: InteractiveLayerWMS;
				lc = new WMSLayerConfiguration(srv, ["background-dem"]);
				lc.label = "Backgrounds/DEM";
				l = new InteractiveLayerWMS(m_iw, lc);
				l.setWMSStyleName(0, "white-colours");
				m_iw.addLayer(l);
				l.refresh(true);

				InteractiveLayerQTTMS.drawBorders = true;
				InteractiveLayerQTTMS.drawDebugText = true;
				var tl: InteractiveLayerQTTMS = new InteractiveLayerQTTMS(m_iw,
						'http://b.tile.openstreetmap.org/%ZOOM%/%COL%/%ROW%.png',
						'EPSG:900913', new BBox(-20037508.34, -20037508.34, 20037508.34, 20037508.34), 0, 10);
				m_iw.addLayer(tl);

				lc = new WMSLayerConfiguration(srv2, ["Surface"]);
				lc.label = "Surface observations";
				lc.mi_autoRefreshPeriod = 60;
				l = new InteractiveLayerWMS(m_iw, lc);
				m_iw.addLayer(l);
				l.refresh(true);
				m_surfaceObsLayer = l;

				lc = new WMSLayerConfiguration(srv, ["foreground-lines"]);
				lc.label = "Overlays/Border lines";
				l = new InteractiveLayerWMS(m_iw, lc);
				m_iw.addLayer(l);
				l.refresh(true);
				
				Projection.addCRSByProj4("EPSG:54004", "+title=World Mercator +proj=merc +lat_ts=0 +lon_0=0 +k=1.000000 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m");
				Projection.addCRSByProj4("EPSG:102018", "+title=North Pole Stereographic +proj=stere +lat_0=90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m");
				Projection.addCRSByProj4("EPSG:102021", "+title=South Pole Stereographic +proj=stere +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m");
			}

			protected function onMouseMove(event: MouseEvent):void
			{
				labelLocation.text = "[" + event.localX + ", " + event.localY + "] = ";
				var c: Coord = m_iw.pointToCoord(event.localX, event.localY).toLaLoCoord();
				labelLocation.text += c != null ? c.toNiceString() : "?";
			}
		]]>
	</fx:Script>
	<s:Label text="This example demonstrates basic OpenGIS WMS functionality with custom dimensions support,&#xa;zooming, panning, change of projection reference system and data layer autorefresh."/>
	<s:HGroup id="hboxMenu" width="100%" >
		<s:Label text="Tools:"/>
		<s:ToggleButton label="Zoom (Ctrl)"
				selected="{!m_ilz.requireCtrlKey}"
				click="m_ilp.requireShiftKey = true; m_ilz.requireCtrlKey = !m_ilz.requireCtrlKey;"/>
		<s:ToggleButton label="Zoom 100%"
				click="m_iw.setViewFullExtent()"/>
		<s:ToggleButton label="Pan (Shift)"
				selected="{!m_ilp.requireShiftKey}"
				click="m_ilz.requireCtrlKey = true; m_ilp.requireShiftKey = !m_ilp.requireShiftKey;" />
		<s:Spacer width="10"/>
		<s:Label text="Projections:"/>
		<s:ToggleButton label="LatLon"
				selected="{m_iw.crs == 'EPSG:4326'}" 
				click="m_iw.setCRS('EPSG:4326', false); m_iw.setExtentBBOXRaw(-180,-90,180,90);"/>
		<s:ToggleButton label="Mercator"
				selected="{m_iw.crs == 'EPSG:54004'}" 
				click="m_iw.setCRS('EPSG:54004', false); m_iw.setExtentBBOXRaw(0,-13000000,36000000,13000000);"/>
		<s:ToggleButton label="North Polar Stereo"
				selected="{m_iw.crs == 'EPSG:102018'}" 
				click="m_iw.setCRS('EPSG:102018', false); m_iw.setExtentBBOXRaw(-10000000,-10000000,10000000,10000000);"/>
		<s:ToggleButton label="South Polar Stereo"
				selected="{m_iw.crs == 'EPSG:102021'}" 
				click="m_iw.setCRS('EPSG:102021', false); m_iw.setExtentBBOXRaw(-10000000,-10000000,10000000,10000000);"/>
		<s:ToggleButton label="Google Maps"
				selected="{m_iw.crs == 'EPSG:900913'}" 
				click="m_iw.setCRS('EPSG:900913', false); m_iw.setExtentBBOXRaw(-20037508.34,-20037508.34,20037508.34,20037508.34);"/>
	</s:HGroup>
	<s:HGroup width="100%">
		<s:Label text="Displayed surface observations:"/>
		<s:CheckBox id="checkSYNOPs" label="SYNOPs" selected="true" change="m_surfaceObsLayer.setWMSDimensionValue('ShowSYNOPs', checkSYNOPs.selected ? 'yes' : 'no'); m_surfaceObsLayer.updateData(true);"/>
		<s:CheckBox id="checkMETARs" label="METARs" selected="true" change="m_surfaceObsLayer.setWMSDimensionValue('ShowMETARs', checkMETARs.selected ? 'yes' : 'no'); m_surfaceObsLayer.updateData(true);"/>
		<s:CheckBox id="checkBUOYs" label="BUOYs" selected="true" change="m_surfaceObsLayer.setWMSDimensionValue('ShowBUOYs', checkBUOYs.selected ? 'yes' : 'no'); m_surfaceObsLayer.updateData(true);"/>
		<s:Label text="Plot distance:"/>
		<s:HSlider id="sliderPlotDistance" minimum="10" value="200" maximum="500" change="m_surfaceObsLayer.setWMSDimensionValue('PlotDistance', String(uint(sliderPlotDistance.value))); m_surfaceObsLayer.updateData(true);"/>
		<s:Label text="[%]"/>
		<s:Spacer width="10"/>
		<s:Label id="labelLocation" text="[Mouse location]"/>
	</s:HGroup>
	<widgets:InteractiveWidget id="m_iw" width="100%" height="100%" mouseMove="onMouseMove(event)">
		<widgets:InteractiveLayerZoom id="m_ilz" zOrder="1"/>
		<widgets:InteractiveLayerPan id="m_ilp" zOrder="2"/>
	</widgets:InteractiveWidget>
</s:VGroup>
